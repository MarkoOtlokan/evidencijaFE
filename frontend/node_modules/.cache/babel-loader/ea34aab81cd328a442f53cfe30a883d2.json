{"ast":null,"code":"import { register as loginRegister, reducer as loginReducer } from './loginReducer';\nimport combineReducers from './combineReducers';\nimport { actions as loginActions } from './loginReducer';\nexport const initialState = {\n  token: '',\n  theme: 'DARK',\n  login: {\n    status: 'initial'\n  }\n};\nconst types = {\n  SET_THEME: 'SET_THEME',\n  SET_TOKEN: 'SET_TOKEN'\n};\nexport const actions = {\n  setTheme: () => ({}),\n  setAuth: value => ({\n    type: types.SET_AUTH,\n    value\n  }),\n  setToken: token => ({\n    type: types.SET_TOKEN,\n    token\n  }),\n  login: loginActions\n};\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case types.SET_TOKEN:\n      return { ...state,\n        token: action.token\n      };\n\n    case types.SET_THEME:\n      return { ...state,\n        theme: action.theme\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const reducer = combineReducers(initialState, {\n  login: loginReducer,\n  user: userReducer\n});","map":{"version":3,"sources":["/home/tloken/programiranje/mojProjekat/evidencijaFE/frontend/src/reducers/index.js"],"names":["register","loginRegister","reducer","loginReducer","combineReducers","actions","loginActions","initialState","token","theme","login","status","types","SET_THEME","SET_TOKEN","setTheme","setAuth","value","type","SET_AUTH","setToken","userReducer","state","action","user"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,aAArB,EAAoCC,OAAO,IAAIC,YAA/C,QAAmE,gBAAnE;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,gBAAxC;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,KAAK,EAAE,MAFmB;AAG1BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AAHmB,CAArB;AAQP,MAAMC,KAAK,GAAG;AACZC,EAAAA,SAAS,EAAE,WADC;AAEZC,EAAAA,SAAS,EAAE;AAFC,CAAd;AAIA,OAAO,MAAMT,OAAO,GAAG;AACrBU,EAAAA,QAAQ,EAAE,OAAO,EAAP,CADW;AAErBC,EAAAA,OAAO,EAAGC,KAAD,KAAY;AAAEC,IAAAA,IAAI,EAAEN,KAAK,CAACO,QAAd;AAAwBF,IAAAA;AAAxB,GAAZ,CAFY;AAGrBG,EAAAA,QAAQ,EAAGZ,KAAD,KAAY;AAAEU,IAAAA,IAAI,EAAEN,KAAK,CAACE,SAAd;AAAyBN,IAAAA;AAAzB,GAAZ,CAHW;AAIrBE,EAAAA,KAAK,EAAEJ;AAJc,CAAhB;;AAOP,MAAMe,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAOA,MAAM,CAACL,IAAd;AACE,SAAKN,KAAK,CAACE,SAAX;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYd,QAAAA,KAAK,EAAEe,MAAM,CAACf;AAA1B,OAAP;;AACF,SAAKI,KAAK,CAACC,SAAX;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYb,QAAAA,KAAK,EAAEc,MAAM,CAACd;AAA1B,OAAP;;AACF;AACE,aAAOa,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,MAAMpB,OAAO,GAAGE,eAAe,CAACG,YAAD,EAAe;AACnDG,EAAAA,KAAK,EAAEP,YAD4C;AAEnDqB,EAAAA,IAAI,EAAEH;AAF6C,CAAf,CAA/B","sourcesContent":["import { register as loginRegister, reducer as loginReducer } from './loginReducer';\nimport combineReducers from './combineReducers';\nimport { actions as loginActions } from './loginReducer'\n\nexport const initialState = {\n  token: '',\n  theme: 'DARK',\n  login: {\n    status: 'initial'\n  }\n};\n\nconst types = {\n  SET_THEME: 'SET_THEME',\n  SET_TOKEN: 'SET_TOKEN',\n};\nexport const actions = {\n  setTheme: () => ({}),\n  setAuth: (value) => ({ type: types.SET_AUTH, value }),\n  setToken: (token) => ({ type: types.SET_TOKEN, token}),\n  login: loginActions\n};\n\nconst userReducer = (state, action) => {\n  switch(action.type){\n    case types.SET_TOKEN:\n      return { ...state, token: action.token };\n    case types.SET_THEME:\n      return { ...state, theme: action.theme};\n    default:\n      return state;\n  }\n};\n\nexport const reducer = combineReducers(initialState, {\n  login: loginReducer,\n  user: userReducer\n})\n"]},"metadata":{},"sourceType":"module"}