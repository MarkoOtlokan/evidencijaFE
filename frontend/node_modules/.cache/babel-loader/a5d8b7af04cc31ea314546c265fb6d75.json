{"ast":null,"code":"import { useContext } from 'react';\nimport { StoreContext } from '../Store';\nimport axios from 'axios';\nexport function useLogin() {\n  const _useContext = useContext(StoreContext),\n        state = _useContext.state,\n        actions = _useContext.actions,\n        dispatch = _useContext.dispatch;\n\n  const context = useContext(StoreContext);\n\n  const login = (email, password) => {\n    dispatch(actions.login.begin());\n    axios.post('http://localhost:5000/api/auth/login', {\n      email,\n      password\n    }).then(data => {\n      let token = data.data.token;\n      dispatch(actions.login.success(token));\n      window.localStorage.setItem('token', token);\n    }).catch(error => {\n      window.localStorage.setItem('token', 'testToken');\n      dispatch(actions.login.fail(error.data));\n    });\n  };\n\n  const reset = () => {\n    dispatch(actions.login.reset());\n  };\n\n  return {\n    state: state.login,\n    login,\n    reset\n  };\n}","map":{"version":3,"sources":["/home/tloken/programiranje/mermuin-starter/frontend/src/hooks/useLogin.js"],"names":["useContext","StoreContext","axios","useLogin","state","actions","dispatch","context","login","email","password","begin","post","then","data","token","success","window","localStorage","setItem","catch","error","fail","reset"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA,sBACWH,UAAU,CAACC,YAAD,CADrB;AAAA,QACjBG,KADiB,eACjBA,KADiB;AAAA,QACVC,OADU,eACVA,OADU;AAAA,QACDC,QADC,eACDA,QADC;;AAEzB,QAAMC,OAAO,GAAGP,UAAU,CAACC,YAAD,CAA1B;;AAEA,QAAMO,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjCJ,IAAAA,QAAQ,CAACD,OAAO,CAACG,KAAR,CAAcG,KAAd,EAAD,CAAR;AACAT,IAAAA,KAAK,CAACU,IAAN,CAAW,sCAAX,EAAmD;AAACH,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAnD,EACGG,IADH,CACQC,IAAI,IAAI;AAAA,UACNC,KADM,GACID,IAAI,CAACA,IADT,CACNC,KADM;AAEZT,MAAAA,QAAQ,CAACD,OAAO,CAACG,KAAR,CAAcQ,OAAd,CAAsBD,KAAtB,CAAD,CAAR;AACAE,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCJ,KAArC;AACD,KALH,EAMGK,KANH,CAMSC,KAAK,IAAI;AACdJ,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,WAArC;AACAb,MAAAA,QAAQ,CAACD,OAAO,CAACG,KAAR,CAAcc,IAAd,CAAmBD,KAAK,CAACP,IAAzB,CAAD,CAAR;AACD,KATH;AAUD,GAZD;;AAcA,QAAMS,KAAK,GAAG,MAAM;AAClBjB,IAAAA,QAAQ,CAACD,OAAO,CAACG,KAAR,CAAce,KAAd,EAAD,CAAR;AACD,GAFD;;AAIA,SAAO;AACLnB,IAAAA,KAAK,EAAEA,KAAK,CAACI,KADR;AAELA,IAAAA,KAFK;AAGLe,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import { useContext } from 'react';\nimport { StoreContext } from '../Store';\nimport axios from 'axios';\n\nexport function useLogin() {\n  const { state, actions, dispatch} = useContext(StoreContext);\n  const context = useContext(StoreContext);\n\n  const login = (email, password) => {\n    dispatch(actions.login.begin());\n    axios.post('http://localhost:5000/api/auth/login', {email, password})\n      .then(data => {\n        let { token } = data.data\n        dispatch(actions.login.success(token))\n        window.localStorage.setItem('token', token)\n      })\n      .catch(error => {\n        window.localStorage.setItem('token', 'testToken')\n        dispatch(actions.login.fail(error.data))\n      })\n  }\n\n  const reset = () => {\n    dispatch(actions.login.reset())\n  }\n\n  return {\n    state: state.login,\n    login,\n    reset\n  }\n}\n"]},"metadata":{},"sourceType":"module"}