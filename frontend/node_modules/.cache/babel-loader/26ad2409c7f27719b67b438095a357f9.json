{"ast":null,"code":"const types = {\n  LOGIN: 'LOGIN',\n  PENDING: 'LOGIN_PENDING',\n  SUCCESS: 'LOGIN_SUCCESS',\n  ERROR: 'LOGIN_ERROR'\n};\nexport const initialState = {\n  status: 'initial'\n};\nexport const actions = {\n  reset: () => ({\n    type: types.LOGIN\n  }),\n  begin: () => ({\n    type: types.PENDING\n  }),\n  success: token => ({\n    type: types.SUCCESS,\n    token\n  }),\n  fail: error => ({\n    type: types.ERROR,\n    error\n  })\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOGIN:\n      return { ...initialState\n      };\n\n    case types.PENDING:\n      return {\n        status: 'pending'\n      };\n\n    case types.SUCCESS:\n      return {\n        status: 'success',\n        token: action.token\n      };\n\n    case types.ERROR:\n      return {\n        status: 'error',\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\nexport const register = (globalState, globalActions) => {\n  globalState.login = initialState;\n  globalActions.login = actions;\n};","map":{"version":3,"sources":["/home/tloken/programiranje/mojProjekat/evidencijaFE/frontend/src/reducers/loginReducer.js"],"names":["types","LOGIN","PENDING","SUCCESS","ERROR","initialState","status","actions","reset","type","begin","success","token","fail","error","reducer","state","action","register","globalState","globalActions","login"],"mappings":"AAAA,MAAMA,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,OADK;AAEZC,EAAAA,OAAO,EAAE,eAFG;AAGZC,EAAAA,OAAO,EAAE,eAHG;AAIZC,EAAAA,KAAK,EAAE;AAJK,CAAd;AAOA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB;AAIP,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAAE,OAAO;AAAEC,IAAAA,IAAI,EAAET,KAAK,CAACC;AAAd,GAAP,CADc;AAErBS,EAAAA,KAAK,EAAE,OAAO;AAAED,IAAAA,IAAI,EAAET,KAAK,CAACE;AAAd,GAAP,CAFc;AAGrBS,EAAAA,OAAO,EAAGC,KAAD,KAAY;AAAEH,IAAAA,IAAI,EAAET,KAAK,CAACG,OAAd;AAAuBS,IAAAA;AAAvB,GAAZ,CAHY;AAIrBC,EAAAA,IAAI,EAAGC,KAAD,KAAY;AAACL,IAAAA,IAAI,EAAET,KAAK,CAACI,KAAb;AAAoBU,IAAAA;AAApB,GAAZ;AAJe,CAAhB;AAOP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKT,KAAK,CAACC,KAAX;AACE,aAAO,EAAE,GAAGI;AAAL,OAAP;;AAEF,SAAKL,KAAK,CAACE,OAAX;AACE,aAAO;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAAP;;AAEF,SAAKN,KAAK,CAACG,OAAX;AACE,aAAO;AAAEG,QAAAA,MAAM,EAAE,SAAV;AAAqBM,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAAnC,OAAP;;AAEF,SAAKZ,KAAK,CAACI,KAAX;AACE,aAAO;AAAEE,QAAAA,MAAM,EAAE,OAAV;AAAmBQ,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAAjC,OAAP;;AAEF;AACE,aAAOE,KAAP;AAdJ;AAgBD,CAjBM;AAmBP,OAAO,MAAME,QAAQ,GAAG,CAACC,WAAD,EAAcC,aAAd,KAAgC;AACtDD,EAAAA,WAAW,CAACE,KAAZ,GAAoBhB,YAApB;AACAe,EAAAA,aAAa,CAACC,KAAd,GAAsBd,OAAtB;AACD,CAHM","sourcesContent":["const types = {\n  LOGIN: 'LOGIN',\n  PENDING: 'LOGIN_PENDING',\n  SUCCESS: 'LOGIN_SUCCESS',\n  ERROR: 'LOGIN_ERROR'\n}\n\nexport const initialState = {\n  status: 'initial'\n}\n\nexport const actions = {\n  reset: () => ({ type: types.LOGIN }),\n  begin: () => ({ type: types.PENDING }),\n  success: (token) => ({ type: types.SUCCESS, token}),\n  fail: (error) => ({type: types.ERROR, error})\n}\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOGIN:\n      return { ...initialState }\n\n    case types.PENDING:\n      return { status: 'pending'}\n\n    case types.SUCCESS:\n      return { status: 'success', token: action.token}\n\n    case types.ERROR:\n      return { status: 'error', error: action.error}\n  \n    default:\n      return state\n  }\n}\n\nexport const register = (globalState, globalActions) => {\n  globalState.login = initialState\n  globalActions.login = actions\n}"]},"metadata":{},"sourceType":"module"}