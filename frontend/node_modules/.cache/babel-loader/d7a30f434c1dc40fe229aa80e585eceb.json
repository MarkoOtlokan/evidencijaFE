{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: '0'\n  }\n};\nvar TextareaAutosize = React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"rows\", \"rowsMax\", \"style\", \"value\"]);\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight;\n    singleRowHeight -= padding; // The height of the outer content\n\n    var outerHeight = innerHeight - padding;\n\n    if (rows != null) {\n      outerHeight = Math.max(Number(rows) * singleRowHeight, outerHeight);\n    }\n\n    if (rowsMax != null) {\n      outerHeight = Math.min(Number(rowsMax) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n    outerHeight += boxSizing === 'border-box' ? padding + border : 0;\n    setState(function (prevState) {\n      // Need a large enough different to update the height.\n      // This prevents infinite rendering loop.\n      if (outerHeight > 0 && Math.abs((prevState.outerHeight || 0) - outerHeight) > 1) {\n        return {\n          innerHeight: innerHeight,\n          outerHeight: outerHeight\n        };\n      }\n\n      return prevState;\n    });\n  }, [setState, rows, rowsMax, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: rows || 1,\n    style: _extends({\n      height: state.outerHeight,\n      // Need a large enough different to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: Math.abs(state.outerHeight - state.innerHeight) <= 1 ? 'hidden' : null\n    }, style)\n  }, other)), React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Minimum umber of rows to display.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.any\n} : void 0;\nexport default TextareaAutosize;","map":{"version":3,"sources":["/home/tloken/programiranje/mojProjekat/evidencijaFE/frontend/node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","React","PropTypes","debounce","useForkRef","getStyleValue","computedStyle","property","parseInt","useEnhancedEffect","window","useLayoutEffect","useEffect","styles","shadow","visibility","position","overflow","height","TextareaAutosize","forwardRef","props","ref","onChange","rows","rowsMax","style","value","other","_React$useRef","useRef","isControlled","current","inputRef","handleRef","shadowRef","_React$useState","useState","_React$useState2","state","setState","syncHeight","useCallback","input","getComputedStyle","inputShallow","width","placeholder","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","prevState","abs","handleResize","addEventListener","clear","removeEventListener","handleChange","event","createElement","Fragment","className","readOnly","tabIndex","process","env","NODE_ENV","propTypes","string","func","oneOfType","number","object","any"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: '0'\n  }\n};\nvar TextareaAutosize = React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"rows\", \"rowsMax\", \"style\", \"value\"]);\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight;\n    singleRowHeight -= padding; // The height of the outer content\n\n    var outerHeight = innerHeight - padding;\n\n    if (rows != null) {\n      outerHeight = Math.max(Number(rows) * singleRowHeight, outerHeight);\n    }\n\n    if (rowsMax != null) {\n      outerHeight = Math.min(Number(rowsMax) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n    outerHeight += boxSizing === 'border-box' ? padding + border : 0;\n    setState(function (prevState) {\n      // Need a large enough different to update the height.\n      // This prevents infinite rendering loop.\n      if (outerHeight > 0 && Math.abs((prevState.outerHeight || 0) - outerHeight) > 1) {\n        return {\n          innerHeight: innerHeight,\n          outerHeight: outerHeight\n        };\n      }\n\n      return prevState;\n    });\n  }, [setState, rows, rowsMax, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: rows || 1,\n    style: _extends({\n      height: state.outerHeight,\n      // Need a large enough different to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: Math.abs(state.outerHeight - state.innerHeight) <= 1 ? 'hidden' : null\n    }, style)\n  }, other)), React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Minimum umber of rows to display.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.any\n} : void 0;\nexport default TextareaAutosize;"]},"metadata":{},"sourceType":"module"}